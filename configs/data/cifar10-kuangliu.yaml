debug:
  view_train_augmentation:
    save_to: "vis/training_samples.png"

    normalization_mean: "{const.normalization_mean}"
    normalization_std: "{const.normalization_std}"

    subplot_dim: [4, 4]
    plot_size: 5
    resize_to: [256, 256] # resize so class text is displayed.
    label_map: "{const.label_map}"
  network_summary:
    input_shape: [3, 32, 32]

dataset:
  # list of parameters used when using `data.dataset.torchvision_dataset` to load `torchvision.datasets`
  dataset_base_cfg:
    name: "TorchvisionDataset"
    args:
      name: "CIFAR10"
      args:
        root: "./cifar10"
  dataset_subset_cfg:
    trn:
      args:
        args:
          download: True
          train: True
    val:
      args:
        args:
          train: False
  initial_transform:
    name: "TupleToClassificationData"

# default data augmentation for CIFAR-10 is from https://github.com/kuangliu/pytorch-cifar/blob/master/main.py#L30
transform:
  [
    [
      "trn",
      [
        {
          "name": "TorchvisionTransform",
          "args":
            { "name": "RandomCrop", "args": { "size": 32, "padding": 4 } },
        },
        {
          "name": "TorchvisionTransform",
          "args": { "name": "RandomHorizontalFlip" },
        },
      ],
    ],
    [
      "trn,val",
      [
        { "name": "ImageToTensor", "args": {} },
        {
          "name": "Normalize",
          "args":
            {
              "mean": "{const.normalization_mean}",
              "std": "{const.normalization_std}",
            },
        },
      ],
    ],
  ]
# other useful configs.
const:
  task: "image classification"
  normalization_mean: [0.4914, 0.4822, 0.4465]
  normalization_std: [0.2023, 0.1994, 0.2010]
  num_classes: 10
  label_map:
    - "airplane"
    - "automobile"
    - "bird"
    - "cat"
    - "deer"
    - "dog"
    - "frog"
    - "horse"
    - "ship"
    - "truck"
